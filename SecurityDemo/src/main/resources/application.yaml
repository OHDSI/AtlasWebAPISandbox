# WebAPI properties.  Define these first, there may be other properties that
# need to refer to these.  YAML does not support forward references.
webapi:
  app-db:
    dialect: postgresql
    driver-class-name: org.postgresql.Driver
    password: app1
    schemaName: webapi
    url: jdbc:postgresql://localhost:5432/OHDSI
    username: ohdsi_app_user
  audit-trail:
    enabled: false
    log-file: /tmp/atlas/audit/audit.log
    extra-log-file: /tmp/atlas/audit/audit-extra.log
  cdm-db:
    dialect: postgresql
    jdbc-template-suppress-api-exceptions: true
    name: CDM_NAME
    version: 5
  cdm-results:
    achilles:
      enable-cache-warming: false
    concept-record:
      use-person-count: false
    cron:
      # cron expression to warm cdm cache -->
      # cron expression format (asterisk means 'every' - '*' in seconds means 'every second') -->
      # default value is '0 0 2 * * *' which means "at 2am every day" -->
      # ┌───────second (0-59)
      # │ ┌────── minute (0-59)
      # │ │ ┌────── hour (0-23)
      # │ │ │ ┌────── day of the month (1-31)
      # │ │ │ │ ┌────── month (1-12)
      # │ │ │ │ │ ┌────── day of the week (0-6) SUN-SAT, 7 is also Sunday on some systems
      # * * * * * *
      expression: 0 0 2 * * *
      warm-all-caches: false
    enable-cache-warming: true
    jobs-count: 3
  execution-engine:
    invalidation-enabled: true
    invalidation-max-age-hours: 12
    invalidation-period-ms: 600000
    max-zip-volume-size-mb: 100
    result-callback-url: http://localhost:8080/WebAPI/executionservice/callbacks/submission/{id}/result/{password}
    # If provided, this is a list of comma-separated ant path matchers.  During results file
    # processing, any matching files will be excluded from processing.
    result-exclusions:
    status-period-ms: 10000
    token: "Basic YWRtaW5Ab2R5c3NldXNpbmMuY29tOnBhc3N3b3Jk"
    update-status-callback-url: http://localhost:8080/WebAPI/executionservice/callbacks/submission/{id}/status/update/{password}
    url: https://localhost:8888/api/v1/analyze
  heracles:
    small-cell-count: 5
  i18n:
    enabled: true
    defaultLocale: en
  security:
    auth-db:
      authentication-query: "select password,firstName,middleName,lastName from ${webapi.security.auth-db.schemaName}.users where username = ?"
      dialect: postgresql
      driver-class-name: org.postgresql.Driver
      password: app1
      schemaName: webapi
      url: jdbc:postgresql://localhost:5432/OHDSI
      username: ohdsi_app_user
    cors:
      enabled: true
    # If defaultGlobalReadPermissions is set to true (default), then all users can see every artifact.
    # If it is set to false, WebAPI will filter out the artifacts that a user does not explicitly have
    # read permissions to
    default-global-read-permissions: true
    enabled: false
    origin: "*"
    provider: none
  tag:
    enabled: true
    refresh-stat-period-ms: 600000
  user:
    defaultRoles:
      - public
  versioning:
    save-version-retry-count: 10

# Actuator observability
# -------------------------------------------------------------------------------
management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        # Not a good idea in production, for this demo allow all.
        include: "*"
  endpoint:
    env:
      # Spring (by default) will not display values - so tell it to do so
      show-values: ALWAYS
    configprops:
      # Spring (by default) will not display values - so tell it to do so
      show-values: ALWAYS
    prometheus:
      access: unrestricted
    shutdown:
      enabled: true
  info:
    env:
      enabled: true
    git:
      enabled: true
    java:
      enabled: true

info:
  app:
    name: @project.name@
    description: @description@
    version: @version@
    cdm:
      name: ${source.cdm}
      version: ${cdm.version}

# Spring
# -------------------------------------------------------------------------------
spring:
  application:
    name: secdemo
  main:
    banner-mode: off

# Logging
# -------------------------------------------------------------------------------
logging:
  level:
    root: info
    org:
      springframework:
        security: TRACE


# Server
# -------------------------------------------------------------------------------
server:
  port: 8080
  servlet:
    context-path: /WebAPI
